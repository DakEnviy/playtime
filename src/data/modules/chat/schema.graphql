schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Query {
    messages: [Message!]!
}

type Mutation {
    sendMessage(input: SendMessageInput!): Message!
    deleteMessage(input: DeleteMessageInput!): DeletedMessagePayload!
    warnChat(input: WarnChatInput!): DeletedMessagesBySenderPayload!
}

type Subscription {
    sentMessage: Message!
    deletedMessage: DeletedMessagePayload!
    deletedMessagesBySender: DeletedMessagesBySenderPayload!
}

type Message {
    id: ID!
    sender: User!
    message: String!
    createdAt: DateTime!
}

input SendMessageInput {
    message: String!
}

input DeleteMessageInput {
    messageId: ID!
}

type DeletedMessagePayload {
    messageId: ID!
}

input WarnChatInput {
    userId: ID!
}

type DeletedMessagesBySenderPayload {
    senderId: ID!
}
